- name: Ensure directory {{ application_workdir }} exists
  file:
    name: "{{ application_workdir }}"
    owner: "{{ app_user }}"
    group: "{{ app_user }}"
    state: directory

- name: Copying env files to {{ application_workdir }} directory
  copy:
    src: "{{ item.src }}"
    owner: "{{ app_user }}"
    group: "{{ app_user }}"
    dest: "{{ application_workdir}}/{{ item.dest }}"
  loop:
    - { src: 'files/common.env.example', dest: 'common.env' }
    - { src: 'files/uwsgi.env.example', dest: 'uwsgi.env' }

- name: Copying docker-compose file
  template:
    src: backend/docker-compose.yml.j2
    dest: "{{ application_workdir }}/docker-compose.yml"
    owner: "{{ app_user }}"
    group: "{{ app_user }}"

- name: Running application services
  community.docker.docker_compose:
    project_src: "{{ application_workdir }}"
    state: present
  throttle: 1
  register: output

- name: Synchronizes the database state with models and migrations
  community.docker.docker_container_exec:
    container: "{{ (output.services.backend.keys()|list).0 }}"
    command: python backend/manage.py migrate
  when: inventory_hostname == groups['application'][0]
